[package]
name = "matrix-hedwig"
version = "2.0.0"
authors = [
	"Christian Pauly <c.pauly@famedly.com>",
	"Kateřina Churanová <k.churanova@famedly.com>",
	"Emily Dietrich <emilydietrich321@gmail.com>",
]
publish = false
edition = "2021"

[dependencies]
async-trait = "0.1.86"
axum = { version = "0.7.5", features = ["macros"] }
axum-opentelemetry-middleware = { version = "0.3.0", git = "https://github.com/famedly/axum-opentelemetry-middleware.git" }
color-eyre = "0.6.3"
config = "0.13.4"
firebae-cm = "0.1.0"
gcp_auth = "0.8.1"
opentelemetry = { version = "0.24.0", features = ["metrics"] }
opentelemetry_sdk = { version = "0.24.1", features = ["metrics", "rt-tokio"] }
opentelemetry-prometheus = "0.17.0"
rand = "0.8.5"
serde = { version = "1.0.217", features = ["derive"] }
serde_json = "1.0.138"
tokio = { version = "1.43.0", features = ["full"] }
tower-http = { version = "0.6.6", features = [ "catch-panic", "normalize-path" ] }
tracing = "0.1.41"
tracing-appender = "0.2.3"
tracing-subscriber = "0.3.19"

[dev-dependencies]
futures = "0.3.31"
http = "0.2.12"
hyper = "0.14.32"
regex = "1.11.1"
tower = "0.4.13"

[build-dependencies]
anyhow = "1.0.95"
vergen-gitcl = { version = "1.0.5", features = [
	"cargo",
	"build",
	"rustc",
	"si",
] } # vergen passes metadata like the version and git commit hash to cargo as a compile-time environment variables

[lints.rust]
dead_code = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_qualifications = "warn"

[lints.clippy]
tabs_in_doc_comments = "allow"
branches_sharing_code = "warn"
cast_lossless = "warn"
cast_possible_wrap = "warn"
checked_conversions = "warn"
cloned_instead_of_copied = "warn"
create_dir = "warn"
dbg_macro = "warn"
default_trait_access = "warn"
expect_used = "warn"
expl_impl_clone_on_copy = "warn"
fallible_impl_from = "warn"
filetype_is_file = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp = "warn"
fn_params_excessive_bools = "warn"
fn_to_numeric_cast_any = "warn"
future_not_send = "warn"
if_then_some_else_none = "warn"
implicit_clone = "warn"
implicit_hasher = "warn"
implicit_saturating_sub = "warn"
imprecise_flops = "warn"
inefficient_to_string = "warn"
items_after_statements = "warn"
iter_not_returning_iterator = "warn"
large_digit_groups = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
manual_let_else = "warn"
manual_ok_or = "warn"
many_single_char_names = "warn"
map_unwrap_or = "warn"
mem_forget = "warn"
#missing_const_for_fn = "warn"
missing_docs_in_private_items = "warn"
must_use_candidate = "warn"
mut_mut = "warn"
mutex_atomic = "warn"
needless_bitwise_bool = "warn"
non_send_fields_in_send_ty = "warn"
option_option = "warn"
path_buf_push_overwrite = "warn"
print_stderr = "warn"
print_stdout = "warn"
ptr_as_ptr = "warn"
range_minus_one = "warn"
range_plus_one = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_closure_for_method_calls = "warn"
ref_binding_to_reference = "warn"
ref_option_ref = "warn"
return_self_not_must_use = "warn"
same_functions_in_if_condition = "warn"
same_name_method = "warn"
semicolon_if_nothing_returned = "warn"
str_to_string = "warn"
string_to_string = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
too_many_lines = "warn"
trait_duplication_in_bounds = "warn"
trivially_copy_pass_by_ref = "warn"
type_repetition_in_bounds = "warn"
undocumented_unsafe_blocks = "warn"
unnested_or_patterns = "warn"
unreadable_literal = "warn"
unseparated_literal_suffix = "warn"
unused_async = "warn"
unused_self = "warn"
unwrap_used = "warn"
used_underscore_binding = "warn"
useless_let_if_seq = "warn"
verbose_file_reads = "warn"
